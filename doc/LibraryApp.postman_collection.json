{
	"info": {
		"_postman_id": "026b7db0-01ff-4d27-9eff-16fde1aacd18",
		"name": "LibraryApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Section 2",
			"item": [
				{
					"name": "Get WeatherForecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/weatherforecast",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"weatherforecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/users",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/users/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 4",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"dave\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user query string",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register?username=sam&password=password",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							],
							"query": [
								{
									"key": "username",
									"value": "sam"
								},
								{
									"key": "password",
									"value": "password"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user blank fields",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"\",\n\t\"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as bob",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"Bob\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/users",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiJib2IiLCJuYmYiOjE1OTk0ODY0OTQsImV4cCI6MTYwMDA5MTI5NCwiaWF0IjoxNTk5NDg2NDk0fQ.JhwfZS5J4S-BGaExplNu16oXjtwWb5Qd_SGu58rHi4jJJ34bdCA6THUX1FnBcpSwgIxxtgiiu_0BCh7bPiR9ZQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User With Bearer token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiJib2IiLCJuYmYiOjE1OTYwMDQ0MjgsImV4cCI6MTU5NjYwOTIyOCwiaWF0IjoxNTk2MDA0NDI4fQ.ME7hXoP08puzMF8e0Fwf27mYbSV4LD8qL7bFeop1QwsdQWNoJGSF8XDZ0EsMFwfc4aMA78zXd8MydocEtKSP2w"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 7",
			"item": [
				{
					"name": "Get Null Ref Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/server-error",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"server-error"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Auth Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Not Found error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/not-found",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"not-found"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bad Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/bad-request",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"bad-request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Validation Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 8",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as admin and save token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users/lisa",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 9",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"introduction\": \"Updated intro\",\n\t\"lookingFor\": \"Updated lookingFor\",\n\t\"interests\": \"Updated interests\",\n\t\"city\": \"Updated city\",\n\t\"country\": \"Updated country\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 11",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Desktop/APIPhotos/wonder3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Main Photo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users/set-main-photo/11",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"set-main-photo",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "https://localhost:5001/api/users/delete-photo/11",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"users",
								"delete-photo",
								"11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 12",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"username\": \"bob\",\n    \"knownAs\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 13",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users No QS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?pageNumber=3&pageSize=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "3"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with gender",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?gender=female",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "gender",
									"value": "female"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with minAge 25",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?minAge=43",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "minAge",
									"value": "43"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with maxAge 40",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?maxAge=52",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "maxAge",
									"value": "52"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users in 20s",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?minAge=20&maxAge=29",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "minAge",
									"value": "20"
								},
								{
									"key": "maxAge",
									"value": "29"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users orderedby Created",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?orderBy=created&gender=male",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "orderBy",
									"value": "created"
								},
								{
									"key": "gender",
									"value": "male"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users orderedby lastActive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users?orderBy=lastActive&gender=male",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "orderBy",
									"value": "lastActive"
								},
								{
									"key": "gender",
									"value": "male"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 14",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add like for todd from lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/likes/todd",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes",
								"todd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users Liked by",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes?predicate=likedBy",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							],
							"query": [
								{
									"key": "predicate",
									"value": "likedBy"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test API have login token",
			"item": [
				{
					"name": "Login username and save token to eve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w1rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login admin and save token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Lisa test after change pass",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w4rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test api delete account (must login)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/account/delete/davis",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"delete",
								"davis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test api change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/change-password/lisa?oldPass=Pa$$w1rd&newPass=Pa$$w0rd",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"change-password",
								"lisa"
							],
							"query": [
								{
									"key": "oldPass",
									"value": "Pa$$w1rd"
								},
								{
									"key": "newPass",
									"value": "Pa$$w0rd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Test api reset password_new",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/reset-pass?email=lisa@gmail.com&phone=12-34-56&newPass=Pa$$w4rd",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"reset-pass"
							],
							"query": [
								{
									"key": "email",
									"value": "lisa@gmail.com"
								},
								{
									"key": "phone",
									"value": "12-34-56"
								},
								{
									"key": "newPass",
									"value": "Pa$$w4rd"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 15",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Message From Lisa to Todd",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientUsername\": \"todd\",\n    \"content\": \"Test message 1 from Lola to Todd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Todd and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('todd_token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('todd_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"todd\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Message From Todd to Lisa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{todd_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientUsername\": \"lisa\",\n    \"content\": \"Test message from Todd to Lisa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Default Messages for Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Default Messages for Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outbox Messages for Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages?container=Outbox",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							],
							"query": [
								{
									"key": "container",
									"value": "Outbox"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outbox Messages for Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages?container=Outbox",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							],
							"query": [
								{
									"key": "container",
									"value": "Outbox"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Message thread Lisa and Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages/thread/margo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages",
								"thread",
								"margo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 16_GetUserList",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User Bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('bob_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"username\": \"bob\",\n    \"knownAs\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/account/register",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as admin and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('admin_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users as Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users as Admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as Admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles as admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/users-with-roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"users-with-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/users-with-roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"users-with-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles as lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/users-with-roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"users-with-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos to moderate as admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/photos-to-moderate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"photos-to-moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos to moderate as lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/photos-to-moderate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"photos-to-moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Roles for Lisa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/edit-roles/lisa?roles=Librarian,Member",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"edit-roles",
								"lisa"
							],
							"query": [
								{
									"key": "roles",
									"value": "Librarian,Member"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 18",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"lisa\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as todd and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('todd_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"todd\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as admin and save token to env Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('admin_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for user (add 2 photos here)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Desktop/APIPhotos/wonder2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos to moderate as admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/photos-to-moderate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"photos-to-moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as lisa (get own profile - should see unapproved photo)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as todd (get lisas profile - should not see unapproved photo)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve photo (need to add the id of added photo)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/approve-photo/11",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"approve-photo",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject photo (need to add the id of added photo)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/reject-photo/12",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"reject-photo",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User Bob and save token as bob_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('bob_token', user.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"username\": \"bob\",\n    \"knownAs\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for bob (add 2 photos) - should both be in unapproved state",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Desktop/APIPhotos/bat2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve photo for bob  (need to add the id of unapproved photo) - ensure it gets set as the main photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/approve-photo/13",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"approve-photo",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as bob - should see approved photo set to main",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"bob"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TestBookController",
			"item": [
				{
					"name": "Get Book list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test book Info",
			"item": [
				{
					"name": "Get isbn info list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get info by isbn",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info/getbyisbn/123-321-1-00001-23",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info",
								"getbyisbn",
								"123-321-1-00001-23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new isbn",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info/add-info?isbn=000-321-1-00001-0001&title=Java&author=no&origin=USA&language=English&catalogue=Edu&summary=about java&adddate=2021-07-22&publishdate=2021-07-22&photourl=http",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info",
								"add-info"
							],
							"query": [
								{
									"key": "isbn",
									"value": "000-321-1-00001-0001"
								},
								{
									"key": "title",
									"value": "Java"
								},
								{
									"key": "author",
									"value": "no"
								},
								{
									"key": "origin",
									"value": "USA"
								},
								{
									"key": "language",
									"value": "English"
								},
								{
									"key": "catalogue",
									"value": "Edu"
								},
								{
									"key": "summary",
									"value": "about java"
								},
								{
									"key": "adddate",
									"value": "2021-07-22"
								},
								{
									"key": "publishdate",
									"value": "2021-07-22"
								},
								{
									"key": "photourl",
									"value": "http"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ISBN",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info/update-info?id=1&isbn=000-321-1-00001-0001&title=Java&author=no&origin=USA&language=English&catalogue=Edu&summary=about java&adddate=2021-07-22&publishdate=2021-07-22&photourl=http",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info",
								"update-info"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "isbn",
									"value": "000-321-1-00001-0001"
								},
								{
									"key": "title",
									"value": "Java"
								},
								{
									"key": "author",
									"value": "no"
								},
								{
									"key": "origin",
									"value": "USA"
								},
								{
									"key": "language",
									"value": "English"
								},
								{
									"key": "catalogue",
									"value": "Edu"
								},
								{
									"key": "summary",
									"value": "about java"
								},
								{
									"key": "adddate",
									"value": "2021-07-22"
								},
								{
									"key": "publishdate",
									"value": "2021-07-22"
								},
								{
									"key": "photourl",
									"value": "http"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test delete info by id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info/delete/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test book store",
			"item": [
				{
					"name": "Get Book list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book list No DTo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/no-dto",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"no-dto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book list Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/info",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Delete book by id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/delete/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new book",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/add-book?isbn=123-321-1-00001-5&condition=New",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"add-book"
							],
							"query": [
								{
									"key": "isbn",
									"value": "123-321-1-00001-5"
								},
								{
									"key": "condition",
									"value": "New"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add update book",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/book/update-book?id=3&isbn=123-321-1-00001-7&condition=Broken&adddate=2021-07-25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"book",
								"update-book"
							],
							"query": [
								{
									"key": "id",
									"value": "3"
								},
								{
									"key": "isbn",
									"value": "123-321-1-00001-7"
								},
								{
									"key": "condition",
									"value": "Broken"
								},
								{
									"key": "adddate",
									"value": "2021-07-25"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Borrow Controller",
			"item": [
				{
					"name": "Get borrow card list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get borrow card list by user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/iduser?iduser=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"iduser"
							],
							"query": [
								{
									"key": "iduser",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get borrow card list no-dto",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/no-dto",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"no-dto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/add-card?idbook=3&idISNB=1&iduser=1&borrowtime=2021-07-21&returntime=2021-07-21",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"add-card"
							],
							"query": [
								{
									"key": "idbook",
									"value": "3"
								},
								{
									"key": "idISNB",
									"value": "1"
								},
								{
									"key": "iduser",
									"value": "1"
								},
								{
									"key": "borrowtime",
									"value": "2021-07-21"
								},
								{
									"key": "returntime",
									"value": "2021-07-21"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/delete-card",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"delete-card"
							]
						}
					},
					"response": []
				},
				{
					"name": "approve card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/approve?id=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"approve"
							],
							"query": [
								{
									"key": "id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/borrow/cancel?id=-1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"borrow",
								"cancel"
							],
							"query": [
								{
									"key": "id",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://localhost:5001"
		}
	]
}